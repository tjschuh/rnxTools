#!/bin/tcsh
#
# given a path/to/a/RINEX/directory output a station list also with approx positions
#
# INPUT:
#
# $1       directory containing RINEX files of interest
#
# OUTPUT:
#
# file within $1 called stationlist with 4 columns: marker/station name, approx position x, y, z
#
# Originally written by tschuh-at-princeton.edu, 07/06/2022
# Last modified by tschuh-at-princeton.edu, 07/26/2022

set warnin = 0
if($#argv != 1)then
  echo ' '
  echo 'RNXSTATLIST: Only one input argument expected:'
  echo ' '
  echo '----------> RNXSTATLIST rinexdir'
  echo '----------> where rinexdir is path to directory containing RINEX files'
  echo ' '
  @ warnin +=1
  goto label999
endif

################################################################################

# redefine input for convenience
set rinexdir = $1

# list all RINEX files within $rinexdir
set files = `find $rinexdir -type d -name "???" -exec find "{}" -type f -name "*.???" \;`

# awk marker name and approx position for each RINEX file
# and output them to file called stationlist
foreach file ($files[*])
    set hdr = `rnx2hdr $file`
    set mkr = `head -$hdr $file | awk '/MARKER NAME/ {print $1}'`
    set pos = `head -$hdr $file | awk '/APPROX POS/ {print $1,$2,$3}'`
    echo $mkr $pos >>! $rinexdir/draft
end

# save only unique lines based on column 1 through column 1
sort -u -k 1,1 $rinexdir/draft > $rinexdir/statlist

rm -f $rinexdir/draft

# get rid of the blank line at the beginning
# I dont think we need this anymore
#if ($OSTYPE  == 'linux') then
#  sed -i '1d' $rinexdir/statlist
#else if ($OSTYPE == 'darwin') then
#  # on MacOS need to add '' in beginning for creation of output file
#  sed -i '' '1d' $rinexdir/statlist
#else
#  echo "Removal of empty line 1 did not work"
#endif

################################################################################

label999:
echo ' '
if ($warnin == 1) then
    echo "Script RNXSTATLIST stopped, $warnin warning message generated"
else
    echo "Script RNXSTATLIST finished, $warnin warning messages generated"
endif
echo ' '
