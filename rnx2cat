#!/bin/tcsh -f
#
# Take 2 RINEX files and merge them into
# 1 new concatenated RINEX file
#
# INPUT:
#
# $1       first RINEX file
# $2       second RINEX file
#
# OUTPUT:
#
# cat.rnx    new concatenated RINEX file
#
# Originally written by tschuh-at-princeton.edu, 07/19/2021
# Last modified by tschuh-at-princeton.edu, 07/21/2021

set warnin = 0
if($#argv < 2)then
  echo ' '
  echo 'RNX2CAT: At least two input arguments expected.'
  echo ' '
  echo '---------> RNX2CAT file1 file2'
  echo '---------> where file1 and file2 are consecutive RINEX files'
  echo ' '
  @ warnin +=1
  goto label999
endif

# Input parsing
set infile1 = $1
set infile2 = $2

# Output parsing
set outfile = `echo cat.rnx`

#####################################################################
# now the code starts

# find the number of header lines of $infile2
set nrh = `rnx2hdr $infile2`

# find the appropriate last time from $infile2
set line = `head -$nrh $infile2 | awk '/TIME OF LAST OBS/'`
set yr = `printf "%4.4i" $line[1]`
set mo = `printf "%2.2i" $line[2]`
set dy = `printf "%2.2i" $line[3]`
set hr = `printf "%2.2i" $line[4]`
set mn = `printf "%2.2i" $line[5]`
set sc = `printf "%010.7f" $line[6]`

# this part takes too long
# will make a separate function that fixes the LAST TIME

# find the line number of the end time in the $infile1
#set tml = `awk '/TIME OF LAST OBS/ {print NR; exit}' $infile1`
# delete that entire line
#sed -i ''"$tml"'d' $infile1

# replace that deleted line with the correct end time from $infile2
#sed -i ''"$tml"' i \ \ '"$yr"'    '"$mo"'    '"$dy"'    '"$hr"'    '"$mn"'   '"$sc"'     GPS         TIME OF LAST OBS' $infile1

# copy all of $infile1 to cat.rnx
cat $infile1 >! $outfile

# delete header lines of $infile2 and append to cat.rnx
sed '1,'"$nrh"'d' $infile2 >> $outfile

#####################################################################
label999:
echo ' '
if ($warnin == 1) then
    echo "Script RNX2CAT stopped, $warnin warning message generated"
else
    echo "Script RNX2CAT finished, $warnin warning messages generated"
endif
echo ' '
