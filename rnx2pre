#!/bin/tcsh
#
# pre-process all GEONET_JAPAN/rinex1hz data to run automatically
#
# INPUT:
#
# $1        starting 4-digit station/marker code i.e. 0842
# $2        ending 4-digit station/marker code i.e. 0895
# $3        start day of year
# $4        end day of year
#
# AUXILLARY CODE NEEDED:
#
# gzip, bzip2, RNXCMP, rnxTools
#
# Originally written by tschuh-at-princeton.edu, 06/07/2022
# Last modified by tschuh-at-princeton.edu, 06/10/2022

set warnin = 0
if($#argv != 4)then
  echo ' '
  echo 'RNX2PRE: Four input arguments expected:'
  echo ' '
  echo '----------> RNX2PRE smkr emkr sdoy edoy'
  echo '----------> where smkr is starting 4-digit station/marker code'
  echo '----------> where emkr is ending 4-digit station/marker code'
  echo '----------> where sdoy is start day of year'
  echo '----------> where edoy is end day of year'
  echo ' '
  @ warnin +=1
  goto label999
endif

#########################################################################

# THIS CODE ONLY WORKS FOR THE STRUCTURE WE'VE DESIGNED ON ORTELIUS

# start in directory with which the station numbers are in

# define sequence marker names
set mkrs = `seq -f %04g $1 $2`

# define sequence of days
set nums = `seq -f %03g $3 $4`
set sznums = `echo ${#nums}`

foreach mkr ($mkrs[*])
    mkdir $mkr
    cd $mkr
    foreach num ($nums[*])
	# get RINEX files for all hours of DoY and corresponding nav file
	# change cp to ln
	# probably need to bzip2 all files in host directory before anything else
	# ask Raj how to make links work for us
	cp ../../../$num/?/{$mkr}* .
	cp ../../../../rinex/2011/$num/{$mkr}*n* .

	# unzip all files
	gzip -d *.11n.gz ; mv *.11n brdm{$num}0.11p
	bzip2 -d *.bz2

	# change obs files from compact rinex to standard
	# also add TIME OF LAST OBS to each file so we can concatenate them
	set files = `/usr/bin/ls *d`
	foreach file ($files[*])
	    CRX2RNX $file
	    rnx2tlo $file:r.11o
	    rm -f $file
	end

	# now concatenate all the RINEX files for each day into 1 file
	rnx2cat {$mkr}{$num}a.11o {$mkr}{$num}b.11o ; mv cat.rnx temp
	set files = `/usr/bin/ls {$1}{$num}[c-x].11o`
	foreach file ($files[*])
	    rnx2cat temp $file ; mv -f cat.rnx temp
	end
	rm -rf {$mkr}{$num}[a-x].11o
	mv temp {$mkr}{$num}0.11o
    end
    cd ..
end

#############################################################################

# this will need to be new function
# put config file in one smart sport and call it on command line

foreach mkr ($mkrs[*])
    # cd into each station directory
    cd $mkr    
    # working path
    set pth = `pwd`
    # actually run PRIDE
    pdp3 -cfg ~/path/2/config -m K -s 2011/$3 00:00:00 -e 2011/$4 11:59:59 -n $mkr -i 1 -f $pth/{$mkr}{$3}0.11o
    # cd back up to base directory with all stations
    cd ..
end

##############################################################################

label999:
echo ' '
if ($warnin == 1) then
    echo "Script RNX2PRE stopped, $warnin warning message generated"
else
    echo "Script RNX2PRE finished, $warnin warning messages generated"
endif
echo ' '
